<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Workloads on</title><link>https://kubedl.io/docs/workloads/</link><description>Recent content in Workloads on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 16 Mar 2021 08:43:03 +0100</lastBuildDate><atom:link href="https://kubedl.io/docs/workloads/index.xml" rel="self" type="application/rss+xml"/><item><title>PyTorch</title><link>https://kubedl.io/docs/workloads/pytorch/</link><pubDate>Thu, 01 Apr 2021 16:38:30 -0700</pubDate><guid>https://kubedl.io/docs/workloads/pytorch/</guid><description>Example apiVersion: training.kubedl.io/v1alpha1 kind: &amp;quot;PyTorchJob&amp;quot; metadata: name: &amp;quot;pytorch-dist-sendrecv-example&amp;quot; namespace: &amp;quot;kubedl&amp;quot; spec: pytorchReplicaSpecs: Master: replicas: 1 restartPolicy: ExitCode template: spec: containers: - name: pytorch image: kubedl/pytorch-dist-example imagePullPolicy: Always Worker: replicas: 2 restartPolicy: ExitCode template: spec: containers: - name: pytorch image: kubedl/pytorch-dist-example imagePullPolicy: Always CRD Spec Check the CRD definition. Go -&amp;gt;</description></item><item><title>TensorFlow</title><link>https://kubedl.io/docs/workloads/tensorflow/</link><pubDate>Thu, 01 Apr 2021 16:35:14 -0700</pubDate><guid>https://kubedl.io/docs/workloads/tensorflow/</guid><description>Example apiVersion: training.kubedl.io/v1alpha1 kind: &amp;quot;TFJob&amp;quot; metadata: name: &amp;quot;mnist&amp;quot; namespace: kubedl spec: cleanPodPolicy: None tfReplicaSpecs: Worker: replicas: 1 restartPolicy: Never template: spec: containers: - name: tensorflow image: kubedl/tf-mnist-with-summaries:1.0 command: - &amp;quot;python&amp;quot; - &amp;quot;/var/tf_mnist/mnist_with_summaries.py&amp;quot; - &amp;quot;--log_dir=/train/logs&amp;quot; - &amp;quot;--learning_rate=0.01&amp;quot; - &amp;quot;--batch_size=150&amp;quot; volumeMounts: - mountPath: &amp;quot;/train&amp;quot; name: &amp;quot;training&amp;quot; resources: limits: cpu: 2048m memory: 2Gi requests: cpu: 1024m memory: 1Gi volumes: - name: &amp;quot;training&amp;quot; hostPath: path: /tmp/data type: DirectoryOrCreate CRD Spec Check the CRD definition.</description></item><item><title>Mars</title><link>https://kubedl.io/docs/workloads/mars/</link><pubDate>Tue, 16 Mar 2021 08:43:34 +0100</pubDate><guid>https://kubedl.io/docs/workloads/mars/</guid><description>What&amp;rsquo;s Mars Mars is a tensor-based unified framework for large-scale data computation which scales Numpy, Pandas and Scikit-learn, see mars-repo for details. As a data computation framework, mars is easy to scale out and can run across hundreds of machines simultaneously to accelerate large scale data tasks.
A distributed mars job includes 3 roles to collaborate with each otherï¼š
WebService: web-service accepts requests from end-users and forwards the whole tensor-graph to scheduler, it provides a dashboard for end users to track job status and submit tasks interactively.</description></item><item><title>XGBoost</title><link>https://kubedl.io/docs/workloads/xgboost/</link><pubDate>Thu, 01 Apr 2021 16:41:11 -0700</pubDate><guid>https://kubedl.io/docs/workloads/xgboost/</guid><description>Example apiVersion: training.kubedl.io/v1alpha1 kind: &amp;quot;XGBoostJob&amp;quot; metadata: name: &amp;quot;xgboost-dist-iris-test-train&amp;quot; spec: xgbReplicaSpecs: Master: replicas: 1 restartPolicy: Never template: apiVersion: v1 kind: Pod spec: containers: - name: xgboostjob image: docker.io/merlintang/xgboost-dist-iris:1.1 ports: - containerPort: 9991 name: xgboostjob-port imagePullPolicy: Always args: - --job_type=Train - --xgboost_parameter=objective:multi:softprob,num_class:3 - --n_estimators=10 - --learning_rate=0.1 - --model_path=autoAI/xgb-opt/2 - --model_storage_type=oss - --oss_param=unknown Worker: replicas: 2 restartPolicy: ExitCode template: apiVersion: v1 kind: Pod spec: containers: - name: xgboostjob image: docker.io/merlintang/xgboost-dist-iris:1.1 ports: - containerPort: 9991 name: xgboostjob-port imagePullPolicy: Always args: - --job_type=Train - --xgboost_parameter=&amp;quot;objective:multi:softprob,num_class:3&amp;quot; - --n_estimators=10 - --learning_rate=0.</description></item><item><title>Mpi</title><link>https://kubedl.io/docs/workloads/mpi/</link><pubDate>Fri, 02 Apr 2021 18:16:28 -0700</pubDate><guid>https://kubedl.io/docs/workloads/mpi/</guid><description>Spec Check the CRD definition. Go -&amp;gt;</description></item><item><title>Cron Training</title><link>https://kubedl.io/docs/workloads/cron/</link><pubDate>Wed, 07 Apr 2021 15:35:16 -0700</pubDate><guid>https://kubedl.io/docs/workloads/cron/</guid><description>KubeDL supports running the training jobs periodically using the Cron workload.
Example apiVersion: apps.kubedl.io/v1alpha1 kind: Cron metadata: name: hello-cron-tf spec: schedule: &amp;quot;0 * * * *&amp;quot; # trigger tf training per hour. concurrencyPolicy: Allow historyLimit: 10 template: apiVersion: kubeflow.org/v1 kind: TFJob workload: metadata: generateName: cron-tensorflow spec: cleanPodPolicy: Running successPolicy: AllWorkers tfReplicaSpecs: PS: replicas: 1 restartPolicy: Never template: spec: containers: - name: tensorflow image: kubedl/tf-mnist-with-summaries:1.0 command: - &amp;quot;python&amp;quot; - &amp;quot;/var/tf_mnist/mnist_with_summaries.py&amp;quot; - &amp;quot;--log_dir=/train/logs&amp;quot; - &amp;quot;--learning_rate=0.</description></item></channel></rss>